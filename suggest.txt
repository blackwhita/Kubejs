Blackwhita 给出的建议思路：

先根据 KubeJS 初始给出的报错，在 data 更改 mod 配方（有些 mod 配方没做好，会出现警告，需要你在 server 日志文件中寻找）。

而后做 tag，（防止在物品的选择上出现问题）做出 tag 后在做批量化的齿轮等材料（先把能统一化处理的构建出来，后期如果有变动可以用 if 做出修改）。

在做配方的修改时建议分为两种，一种为原配方修改，一种为制作新配方。

少用 remove 语句，尽量用 id（1.减少复杂程度，美观 2.有些报错是出现 id，如果不用的话你无法找到报错点，只能使用二分法慢慢试一试）

Blackwhita's suggested approach:

Firstly, based on the initial error message provided by KubeJS, modify the mod recipe in the data section (some mod recipes may not be well prepared and a warning may appear, and you need to search for them in the server log file).

Then make a tag (to prevent problems in item selection), and then make a batch of materials such as gears after making the tag (first build the ones that can be unified, and if there are any changes in the later stage, use if to make modifications).

When making formula modifications, it is recommended to divide them into two types: one is to modify the original formula, and the other is to create a new formula.

Minimize the use of remove statements and try to use ids instead (1. Reduce complexity and aesthetics. 2. Some errors may occur due to ids, and if not used, you cannot find the error point. You can only use binary division to try it slowly)
